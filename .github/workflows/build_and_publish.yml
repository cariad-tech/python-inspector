name: Buld and Publish

on:
  push:
    tags:
      - "v*"

env:
  UV_NATIVE_TLS: 1

jobs:
  commitlint:
    name: Build and Publish Tagged Release
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout Project
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Prepare Python Env
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install the project
        shell: bash
        run: |
          uv sync --all-extras --dev

      - name: Build ðŸ“¦ package
        run: |
          uv build
        shell: bash

      - name: Upload artifacts
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: python-inspector-cariad
          path: dist/python_inspector_cariad-*-py3-none-any.whl
          overwrite: true

      - name: Find Wheel File
        id: find_whl
        run: echo "WHL_FILE=$(ls dist/python_inspector_cariad-*-py3-none-any.whl)" >> $GITHUB_ENV

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.WHL_FILE }}
          asset_name: $(basename ${{ env.WHL_FILE }})
          asset_content_type: application/zip
